---
title: "Insurance and Diabetes Dashboard"
format: 
  dashboard:
    page-title: "Insurance and Diabetes Dashboard"
theme: [sandstone, theme/custom.scss]
fig-width: 10
fig-asp: 0.3
editor_options: 
  chunk_output_type: console
---


```{r}
#| label: load-packages
#| message: false

library(janitor)
library(naniar)
library(knitr)
library(easystats)
library(magrittr)
library(Hmisc)
library(scales)
library(tidyverse)

library(DT)
library(gt)
theme_set(theme_minimal(base_size = 24, base_family = "sans"))
```

```{r}
#| label: load-data
#| message: false

all.adults <- readRDS("data/all.adults.Rds")
young.adults <- readRDS("data/young.adults.Rds")
```

#  {.sidebar}

This dashboard displays national level statistics for the pre-pandemic period in the United States:

|              |                     |
|--------------|---------------------|
| **Source** | NHANES |
| **Begin**     | 2017  |
| **End**    | March 2020   |

------------------------------------------------------------------------

::: {.callout-note collapse="true"}
## Disclaimer

These data do not include sample weights from NHANES and thus are not truly representative of national estimates.
:::

# Prevalence and Proportions

```{r}
#| label: all-values
#| results: hide

# overall prevalence calculations
diabetes_prevalence <- all.adults %>%
  summarise(prevalence = mean(Diabetes == "Yes", na.rm = TRUE))
n <- nrow(all.adults) 
pd <- diabetes_prevalence$prevalence  
z_score <- qnorm(0.95)  
se <- sqrt((pd * (1 - pd)) / n)
lower_boundd <- pd - z_score * se
upper_boundd <- pd + z_score * se

DM_p <- as.character(cat("Estimated National Prevalence [90%]: ", round(pd*100,2), "% [",round(lower_boundd*100,2), ",",round(upper_boundd*100,2), "]", sep = ""))


# Uninsurance Rate 
uninsurance.rate <- all.adults %>%
  summarise(prevalence = mean(Insurance == "No", na.rm = TRUE))
n <- nrow(all.adults) 
pi <- uninsurance.rate$prevalence 
z_score <- qnorm(0.95)  
se <- sqrt((pi * (1 - pi)) / n)
lower_boundi <- pi - z_score * se
upper_boundi <- pi + z_score * se

UI_p <- as.character(cat("Estimated Prevalence of Uninsurance [90%]: ", round(pi,2), "% [",round(lower_boundi,2), ",",round(upper_boundi,2), "]", sep = ""))

```

## Row {height="20%"}

```{r}
#| content: valuebox
#| title: "Prevalence of Diabetes Mellitus (%)"
list(
  color = "primary",
  value = round(pd*100,2)
)
value = DM_p

```

```{r}
#| content: valuebox
#| title: "Prevalence of Uninsurance(%)"

list(
  color = "secondary",
  value = round(pi*100,2)
)
  

```

## row {height = "40%"}

### Column {width="50%"}

```{r}
#| title: Age-Specific Prevalence of Diabetes

all.adults |> 
  mutate(Diabetes = fct_relevel(Diabetes, "No", "Yes")) |>
  filter(!is.na(Diabetes)) |>
  count(age_group, Diabetes) |>
  ggplot(aes(x = n, y = fct_rev(age_group), fill = Diabetes)) +
  geom_col(position = "fill", color = "white") +
  scale_fill_manual(
    values = c("#d68e44", "#1f3c5b"),
    guide = guide_legend(reverse = FALSE)
  ) +
  scale_x_continuous(labels = label_percent()) +
  labs(y = "Age Group (years)", x = NULL, fill = "Diabetes\nStatus")+
  theme(axis.text.y = element_text(size = 12, face = "bold"),
        axis.title.y = element_text(size = 14))
```

### Column {width="50%"}

```{r}
#| title: Age-Specific Prevalence of Uninsurance

all.adults |>  filter(!is.na(Insurance)) |>
  count(age_group, Insurance) |>
  ggplot(aes(x = n, y = fct_rev(age_group), fill = Insurance)) +
  geom_col(position = "fill", color = "white") +
  scale_fill_manual(
    values = c("#ae8b2d", "#0e2635"),
    guide = guide_legend(reverse = TRUE)
  ) +
  scale_x_continuous(labels = label_percent()) +
  labs(y = "Age Group (years)", x = NULL, fill = "Insurance\nStatus")+
  theme(axis.text.y = element_text(size = 12, face = "bold"),
        axis.title.y = element_text(size = 14))
```


## row {height = 40%}

### Column {width = "20%"}

```{r}
# Count insured and uninsured
insurance_counts <- young.adults %>%
  filter(!is.na(Insurance)) %>%
  count(Insurance, name = "Count") %>%
  adorn_totals()

insurance_counts %>% kable()
```


### Column {width = "60%"}

```{r}
#| title: Insurance Rates and Healthcare Utilization

young.adults |>  filter(!is.na(HCU), !is.na(Insurance)) |>
  count(HCU, Insurance) |>
  ggplot(aes(x = n, y = fct_rev(HCU), fill = Insurance)) +
  geom_col(position = "fill", color = "white") +
  scale_fill_manual(
    values = c("#ae8b2d", "#0e2635"),
    guide = guide_legend(reverse = TRUE)
  ) +
  scale_x_continuous(labels = label_percent()) +
  labs(y = "Healthcare Utilization", x = NULL, fill = "Insurance\nStatus")+
  theme(axis.text.y = element_text(size = 12, face = "bold"),
        axis.title.y = element_text(size = 14))
```


# Uninsurance  and Diabetes Risk Factors {orientation="columns"}

## Column {width="60%"}

### Row {height="50%"}

```{r}
#| title: Glycosylated Hemoglobin

young.adults |>  filter(GHB < 6.5, !is.na(Insurance)) |>
  ggplot(aes(x = fct_rev(Insurance), y = GHB )) +
  geom_violin(aes(fill = Insurance)) +
  geom_boxplot(width = 0.3) +
  scale_fill_manual(
    values = c("#ae8b2d", "#0e2635"),
    guide = guide_legend(reverse = TRUE)
  ) +
  labs(y = "Glycosylated Hemoglobin (%A1c) [<6.5%]", x = "Insurance Status", fill = "Insurance\nStatus")+
  theme_classic()

```

```{r}
#| title: "Body Mass Index"

young.adults |>  filter(!is.na(BMI), !is.na(Insurance)) |>
  ggplot(aes(x = fct_rev(Insurance), y = BMI)) +
  geom_violin(aes(fill = Insurance)) +
  geom_boxplot(width = 0.3) +
  scale_fill_manual(
    values = c("#ae8b2d", "#0e2635"),
    guide = guide_legend(reverse = TRUE)
  ) +
  labs(y = "Body Mass Index", x = NULL, fill = "Insurance\nStatus")+
  theme_classic()
```

### Row {height="50%"}

```{r}
#| title: "Systolic Blood Pressure"

young.adults |>  filter(!is.na(SBP), !is.na(Insurance)) |>
  ggplot(aes(x = fct_rev(Insurance), y = SBP)) +
  geom_violin(aes(fill = Insurance)) +
  geom_boxplot(width = 0.3) +
  scale_fill_manual(
    values = c("#ae8b2d", "#0e2635"),
    guide = guide_legend(reverse = TRUE)
  ) +
  labs(y = "Systolic Blood Pressure (mmHg)", x = "Insurance Status", fill = "Insurance\nStatus")+
  theme_classic()
```

```{r}
#| title: "Diastolic Blood Pressure"

young.adults |>  filter(!is.na(SBP), !is.na(Insurance)) |>
  ggplot(aes(x = fct_rev(Insurance), y = DBP, )) +
  geom_violin(aes(fill = Insurance)) +
  geom_boxplot(width = 0.3) +
  scale_fill_manual(
    values = c("#ae8b2d", "#0e2635"),
    guide = guide_legend(reverse = TRUE)
  ) +
  labs(y = "Diastolic Blood Pressure (mmHg)", x = "Insurance Status", fill = "Insurance\nStatus")+
  theme_classic()
```



